/// Expect:
/// - output: "[1, 2, 3, 4, 6, 7, 8]\n[8, 7, 6, 4, 3, 2, 1]\n[\"A\", \"B\", \"C\", \"D\", \"X\", \"Y\"]\n[(7, \"A\"), (9, \"B\"), (5, \"C\"), (1, \"D\")]\n"

import jakt::sorter { Sorter, SortType }

function main() {
    let arr = [1, 3, 4, 6, 7, 8, 2]

    Sorter::sort(values: arr, sort_type: SortType::Ascending)

    println("{}", arr)

    Sorter::sort(values: arr, sort_type: SortType::Descending)

    println("{}", arr)

    let strings = ["A", "B", "D", "Y", "X", "C"]

    Sorter::sort(values: strings, sort_type: SortType::Ascending)

    println("{}", strings)

    let tuples = [
        (5, "C"),
        (7, "A"),
        (1, "D"),
        (9, "B"),   
    ]

    Sorter::sort(values: tuples, sorter: function(anon item_a: &(i64, String), anon item_b: &(i64, String)) -> i8 {
        if item_a.1 > item_b.1 {
            return 1
        } else if item_a.1 < item_b.1 {
            return -1
        } else {
            return 0
        }
    })

    println("{}", tuples)
}