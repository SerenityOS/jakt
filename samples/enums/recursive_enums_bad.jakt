/// Expect:
/// - error: "use 'boxed enum' to make the enum recursive"

enum Operation {
    Add
}

enum AST {
    Int(i64)
    BinaryOperation(lhs: AST, op: Operation, rhs: AST)
}

fn eval(anon ast: AST) -> i64 {
    match ast {
        AST::Int(i) => {
            return i
        }
        AST::BinaryOperation(lhs: lhs, op: op, rhs: rhs) => {
            match op {
                Operation::Add => {
                    return eval(lhs) + eval(rhs)
                }
            }
        }
    }

    return 0
}

fn main() {
    let ast = AST::BinaryOperation(
        lhs: AST::Int(5), 
        op: Operation::Add(), 
        rhs: AST::Int(10)
    )

    println("result: {}", eval(ast))
}
