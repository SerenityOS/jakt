trait Iterable<T> {
    fn next(mut this) -> T?
}

trait ThrowingIterable<T> {
    fn next(mut this) throws -> T?
}

trait IntoIterator<T> {
    fn iterator(this) -> Iterable<T>
}

trait IntoThrowingIterator<T> {
    fn iterator(this) -> ThrowingIterable<T>
}

type Array implements(IntoIterator<T>) { }
type ArraySlice implements(IntoIterator<T>) { }
type Set implements(IntoIterator<V>) { }
type Dictionary implements(IntoIterator<(K, V)>) { }

type ArrayIterator implements(Iterable<T>) { }
type CodePointIterator implements(Iterable<u32>) { }
type SetIterator implements(Iterable<T>) { }
type DictionaryIterator implements(Iterable<(K, V)>) { }
type Range implements(Iterable<T>) { }
