import extern c "windows.h" {
    extern fn GetLastError() -> i32
} before_include define {
    WIN32_LEAN_AND_MEAN = "1"
    NOMINMAX = "1"
} after_include undefine {
    Yield
}

import extern "system_error" {
    namespace std {
        extern struct error_condition {
            fn value(this) -> i32
        }

        extern struct system_category {
            fn system_category() -> system_category
            fn default_error_condition(this, anon error: i32) -> error_condition
        }
    }
}

fn errno_value() -> i32 {
    return std::system_category().default_error_condition(error: GetLastError()).value() as! i32
}
