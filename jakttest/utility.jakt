// Copyright (c) 2022, JT <jt@serenityos.org>
// Copyright (c) 2022, Andreas Kling <kling@serenityos.org>
//
// SPDX-License-Identifier: BSD-2-Clause

function panic(anon message: String) -> void {
    eprintln("internal error: {}", message)
    abort()
}

function todo(anon message: String) {
    eprintln("TODO: {}", message)
    abort()
}

struct Span {
    start: usize
    end: usize
}

function bytes_to_string(anon bytes: [u8]) throws -> String {
    mut builder = StringBuilder::create()

    for byte in bytes.iterator() {
        builder.append(byte)
    }

    return builder.to_string()
}

function string_to_u8_array(anon str: String) throws -> [u8] {
    mut array: [u8] = []
    array.ensure_capacity(str.length())
    for i in 0..str.length() {
        array.push(str.byte_at(i))
    }
    return array
}
